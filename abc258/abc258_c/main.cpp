#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


auto solve(int64_t N, int64_t Q, string S, vector<int64_t> t, vector<int64_t> x) {
    // TODO: edit here
    for(int64_t i=0; i<Q; i++){
        if(t[i]==1){
            string charToMove = S.substr(S.length() - x[i], x[i]);;
            S = S.erase(S.length() - x[i], x[i]);
            S = charToMove + S;
            //cout << S << endl;
        }
        else{
            cout << S[x[i]-1] << endl;
        }
    }


    return 0;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, Q;
    string S;
    std::cin >> N >> Q;
    cin >> S;
    std::vector<int64_t> t(Q);
    std::vector<int64_t> x(Q);
    REP (i, Q) {
        cin >> t[i] >> x[i];
    }
    auto ans = solve(N, Q, S, t, x);
    return 0;
}

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;



// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<int64_t> p(N);
    vector<bool> checker(N, false);
    bool ok = false;
    REP (i, N) {
        std::cin >> p[i];
        if(p[i] == i+1){
            checker[i] = true;
        }
    }
    int cnt = 0;
    int ans = 0;
    REP(i, N){
        if(checker[i] == true){
            ok = true;
            cnt++;
        }
        else{
            ans += ceil((double)cnt/2.0);
            ok = false;
            cnt = 0;
        }
    }   
    if(ok){
        ans += ceil((double)cnt/2.0);
    }
    std::cout << ans << '\n';
    return 0;
}

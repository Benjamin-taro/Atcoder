#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


int64_t h,w,ans;
vector<vector<int64_t>> a;


void solve(int64_t i, int64_t j, set<int64_t> s) {
    if(s.count(a[i][j])) return; //countで1が帰ってくるということはsすでにおとづれた数字と同じ数字のマスを通っているので終了。
    s.insert(a[i][j]); //s通ったますの数字を色区するものに新しく通ったものを追加。
    if(i == h-1 && j == w-1){
        ans++;
        return; //一番右下まで到達した時答えに1追加する。
    }
    if(j+1 < w) solve(i, j+1, s); //横の端まで到達していない場合。
    if(i+1 < h) solve(i+1, j, s); //縦の端まで到達していない場合。
    
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    // failed to analyze input format
    // TODO: edit here
    std::cin >> h >> w;
    a = vector(h, vector<int>(w));
    REP (i, h) {
        REP(j,w){
            std::cin >> a[i][j];
        }
    }
    solve(0, 0, set<int64_t>());
    // failed to analyze output format
    // TODO: edit here
    std::cout << ans << '\n';
    return 0;
}

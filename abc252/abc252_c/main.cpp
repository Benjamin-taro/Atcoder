#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;



// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main(){
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    std::cin >> N;
    std::vector<std::string> S(N);
    int ans = 1001001001;
    REP (i, N) {
        std::cin >> S[i];
    }
    REP(x,10){
        char c = '0'+x;
        vector<int> num(10);
        REP(i, N){
            REP(j, 10){
                if (S[i][j] == c){
                    num[j]++;
                }
            }
        }
        int now = 0;
        REP(i, 10){
            int t = i+10*(num[i]-1);
            now = max(now, t);
        }
        ans = min(ans, now);
    
    }
    std::cout << ans << '\n';
    return 0;
}

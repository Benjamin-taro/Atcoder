#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(int64_t H, int64_t W, std::vector<std::string> &c) {
    REP(i, H){
        REP(j, W){
            if(c[i][j] == '.'){
                continue; // 空のセルは無視する
            }
            if(i == H-1){
                break;
            }
            else{
                if (j == W-1) {
                    c[i][j] = '.';
                    if(c[i+1][j] = '.'){
                        c[i+1][j] = '#';
                    }
                    else{
                        c[i+1][j] = '.';
                    }
                }
                else{
                    c[i][j] = '.';
                    if(c[i+1][j] = '.'){
                        c[i+1][j] = '#';
                    }
                    else{
                        c[i+1][j] = '.';
                    }
                }
            }
                
        }
    }

    






}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t H;
    int64_t W;
    std::cin >> H >> W;
    std::vector<std::string> c(W);
    REP (i, W) {
        std::cin >> c[i];
    }
    auto ans = solve(H, W, c);
    std::cout << (ans ? YES : NO) << '\n';
    return 0;
}

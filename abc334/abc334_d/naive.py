#!/usr/bin/env python3
# from typing import *



# def solve(a: int, b: int, c: List[int], d: List[int]) -> List[str]:
import bisect

def binary_search(arr, target):
    left, right = 0, len(arr)-1
    
    while left <= right:
        mid = (left + right) // 2
        
        if arr[mid] == target:
            return mid + 1 # 見つかった場合、その位置を返す
        elif arr[mid] < target:
            left = mid + 1
        else:
            right = mid + 1
    
    return -1 


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, Q = map(int, input().split())
    R = sorted(list(map(int, input().split())))
    for i in range(N - 1):
        R[i+1] += R[i]
    for _ in range(Q):
        x = int(input())
        print(binary_search(R, x))

if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *


# Importing the necessary library and running the corrected function again
from collections import Counter
from itertools import combinations

def distinct_string_swaps_corrected(S):
    # Count the occurrences of each character in the string
    char_count = Counter(S)
    
    # If all characters are unique, return the number of possible swaps
    if len(char_count) == len(S):
        return len(S) * (len(S) - 1) // 2
    
    # Calculate the total number of unique swaps for strings with repeated characters
    # Initialize with 1 for the original string itself
    unique_swaps = 1
    
    # Add the unique swaps for different characters
    for a, b in combinations(char_count, 2):
        unique_swaps += char_count[a] * char_count[b]
    
    # Return the total count including the original string
    return unique_swaps




# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    S = input()
    print(distinct_string_swaps_corrected(S))


if __name__ == '__main__':
    main()

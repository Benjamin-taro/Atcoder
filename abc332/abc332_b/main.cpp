#include <iostream>
#include <string>
#include <vector>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


std::pair<int64_t, int64_t> solve(int64_t K, int64_t G, int64_t M) {
    int64_t g = 0;
    int64_t m = 0;
    for(int i = 1; i <= K; i++){
        if(g == G){
            g = 0;
        }
        else if(m == 0){
            m = M;
        }
        else{
            if(m > G){
                m = m-(G-g);
                g = G;
                
            }
            else{
                g = g+m;
                m = 0;
            }
        }
    }
    return std::make_pair(g, m);

}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t K, G, M;
    std::cin >> K >> G >> M;
    auto [c, d] = solve(K, G, M);
    std::cout << c << ' ' << d << '\n';
    return 0;
}

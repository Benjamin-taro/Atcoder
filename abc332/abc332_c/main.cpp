#include <iostream>
#include <string>
#include <vector>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


int64_t solve(int64_t N, int64_t M, std::string S) {
    int64_t temp_n = 0, temp_l = 0;
    int64_t c1_n = 0, c1_l = 0;
    for(int i = 1; i <= N; i++){
        if(S[i-1] == '0'){
            temp_n = max(temp_n, c1_n);
            temp_l = max(temp_l, c1_l);
            c1_n = 0;
            c1_l = 0;
        } 
        else if(S[i-1] =='1'){
            c1_n ++;
        }
        else{
            c1_n ++;
            c1_l ++;
        }
    }
    if (c1_n != 0 || c1_l != 0){
        temp_n = max(temp_n, c1_n);
        temp_l = max(temp_l, c1_l);
    }
    if(M < temp_n){
        if ((temp_n - M) < temp_l){
            return temp_l;
        }
        else{
            return temp_n - M;
        }
    }
    else{
        if(temp_l != 0){
            return temp_l;
        }
        else{
            return 0;
        }
    }

}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N, M;
    std::string S;
    std::cin >> N >> M >> S;
    auto ans = solve(N, M, S);
    std::cout << ans << '\n';
    return 0;
}

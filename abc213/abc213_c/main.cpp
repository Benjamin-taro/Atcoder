#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <stack>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#include <cstring>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


vector<int> compress(vector<int> a) {
    int n = a.size();
    map<int, int> mp;
    REP(i,n) mp[a[i]] = 0;
    int id = 1;
    for (auto& p : mp) p.second = id++;
    REP(i,n) a[i] = mp[a[i]];
    return a;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    int h, w, n;
    cin >> h >> w >> n;
    vector<int> a(n), b(n);
    REP(i,n) cin >> a[i] >> b[i];
    a = compress(a);
    b = compress(b);
    REP(i,n) {
        printf("%d %d\n", a[i], b[i]);
    }
    return 0;
}

#!/usr/bin/env python3
# from typing import *
from collections import Counter


# def solve(S: str) -> str:
def solve(S):

    count_dict = dict(Counter(S))

    sorted_dict = {key: count_dict[key] for key in sorted(count_dict)}

    max_value = max(sorted_dict.values())
    max_keys = [key for key, value in sorted_dict.items() if value == max_value]
    '''
    count = []
    ordered_char=[]
    for l in S:
        if l not in ordered_char:
            ordered_char.append(l)
            count.append(1)
        else:
            for m in range(len(ordered_char)):
                if ordered_char[m] == l:
                    count[m] += 1
                    break
    for n, c in enumerate(count):
        if c == max(count):
            output = ordered_char[n]
            break
    '''


    return max_keys[0]



    pass  # TODO: edit here

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    S = input()
    a = solve(S)
    print(a)

if __name__ == '__main__':
    main()

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


int64_t solve(int64_t N) {
    int64_t temp = -1; // 回文数が見つからない場合に備えて、初期値を-1に設定
    for (int64_t i = 1; i * i * i <= N; ++i) {
        string str = to_string(i * i * i);
        string rev_str = str;
        reverse(rev_str.begin(), rev_str.end());
        if (str == rev_str) {
            temp = i * i * i; // 回文なら更新
        }
    }
    return temp; // 最大の回文数を返す
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::cin >> N;
    auto ans = solve(N);
    std::cout << ans << '\n';
    return 0;
}

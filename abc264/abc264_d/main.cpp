#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::string S, T = "atcoder";
    std::cin >> S;
    int64_t n = T.size();
    map<char, int64_t> mp;
    REP(i, n){
        mp[T[i]]= i;//文字をキーとして位置をvalueにしたmap
    }
    vector<int> a(n);
    REP(i, n){
        a[i] = mp[S[i]]; //あるべき場所の数字の順列を作る
    }
    int ans=0;
    REP(i,n){
        REP(j, i){
            if (a[j] > a[i]) ans++;
        }
    }

    std::cout << ans << endl;
    return 0;
}

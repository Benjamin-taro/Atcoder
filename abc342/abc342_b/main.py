#!/usr/bin/env python3
# from typing import *



# def solve(N: int, P: List[int], Q: int, A: List[int], B: List[int]) -> List[str]:
def solve(N, P, Q, AB):
    output = []
    for l in AB:
        if P.index(l[0]) < P.index(l[1]):
            output.append(l[0])
        else:
            output.append(l[1])
    return output


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    P = list(map(int,input().split()))
    Q = int(input())
    AB = [None for _ in range(Q)]
    for i in range(Q):
        AB[i] = list(map(int,input().split()))
    
    ans = solve(N, P, Q, AB)
    print(*ans, sep='\n')
    '''
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    P = [None for _ in range(N)]
    for i in range(N):
        P[i] = int(next(tokens))
    Q = int(next(tokens))
    A = [None for _ in range(Q)]
    B = [None for _ in range(Q)]
    for i in range(Q):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, P, Q, A, B)
    for i in range(Q):
        print(a[i])
    '''

if __name__ == '__main__':
    main()

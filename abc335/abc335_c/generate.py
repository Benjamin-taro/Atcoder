#!/usr/bin/env python3
# usage: $ oj generate-input 'python3 generate.py'
# usage: $ oj generate-input --hack-actual=./a.out --hack-expected=./naive 'python3 generate.py'
import random

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    # Given constraints
    MAX_N = 10**6
    MAX_Q = 2 * 10**5

    # Generate N and Q within given constraints
    N = random.randint(2, MAX_N)
    Q = random.randint(1, min(MAX_Q, 2*N))

    # List to collect queries
    queries = []

    # Generate each query
    for _ in range(Q):
        query_type = random.randint(1, 2)
        if query_type == 1:
            # First type of query
            C = random.choice(['R', 'L', 'U', 'D'])
            queries.append(f"1 {C}")
        else:
            # Second type of query
            p = random.randint(1, N)
            queries.append(f"2 {p}")

    # Prepare the input string
    input_str = f"{N} {Q}\n" + "\n".join(queries)

    # Output the generated input
    print(input_str)

if __name__ == "__main__":
    main()

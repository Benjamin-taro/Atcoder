#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;
//文字配列の二次元配列みたいなやつを回転させる。
vector<string> rotate90(const vector<string>& matrix) {
    int n = matrix.size();
    int m = matrix[0].size();
    vector<string> rotated(m, string(n, '.'));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            rotated[j][n - 1 - i] = matrix[i][j];
        }
    }
    return rotated;
}

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(std::string S, std::string T) {
    vector<pair<char, int64_t>> S_ap, T_ap;
    int64_t cnt=0;
    for(int64_t i=0; i < S.size()-1; i++){
        cnt++;
        if(S[i] != S[i+1]){
            S_ap.emplace_back(pair(S[i], cnt));
            cnt=0;
        }
    }
    S_ap.emplace_back(pair(S[S.size() - 1], cnt+1));
    cnt = 0;
    for(int64_t i=0; i < T.size()-1; i++){
        cnt++;
        if(T[i] != T[i+1]){
            T_ap.emplace_back(pair(T[i], cnt));
            cnt = 0;
        }
    }
    T_ap.emplace_back(pair(T[T.size() - 1], cnt+1));
    bool ans=true;
    if(S_ap.size() == T_ap.size()){
        for(int64_t i = 0; i < T_ap.size(); i++){
        if(T_ap[i].first == S_ap[i].first){//まず文字が同じかを確認
            if(T_ap[i].second == S_ap[i].second){
                continue;
            }
            else if(T_ap[i].second - S_ap[i].second >= 1 && S_ap[i].second != 1){
                continue;
            }
            else{
                ans=false;
                break;
            }
        
        }
        else{
            ans= false;
            break;
        }
        }
    }
    else{
        return false;
    }
    
    return ans;



}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::string S, T;
    std::cin >> S >> T;
    auto ans = solve(S, T);
    std::cout << (ans ? YES : NO) << '\n';
    return 0;
}

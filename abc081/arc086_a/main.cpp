#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


int64_t solve(int N, int64_t K, std::vector<int64_t> &A) {
    map<int64_t, int64_t> mp;
    REP(i,N){
        mp[A[i]]++;
    }
   // std::mapの値を基にstd::vectorにコピーする（値、キーの順）
    std::vector<std::pair<int, int>> vec;
    for (const auto& it : mp) {
        vec.push_back(std::make_pair(it.second, it.first));
    }

    // 値で降順にソート
    std::sort(vec.begin(), vec.end(), [](const std::pair<int, int>& a, const std::pair<int, int>& b) {
        return a.first > b.first;
    });

    // 大きい方からn個の要素の値の合計
    int sum = 0;
    for (int i = 0; i < K && i < vec.size(); ++i) {
        sum += vec[i].first;
    }
    return N-sum;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int N;
    int64_t K;
    std::cin >> N;
    std::vector<int64_t> A(N);
    std::cin >> K;
    REP (i, N) {
        std::cin >> A[i];
    }
    auto ans = solve(N, K, A);
    std::cout << ans << '\n';
    return 0;
}

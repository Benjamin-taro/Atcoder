#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <queue>
#include <array>
#include <climits>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <deque>
#include <numeric>
#include <assert.h>
#include <unordered_map>
#include <type_traits> // For std::is_floating_point
#include <cmath> // For std::ceil
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++ (i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++ (i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; -- (i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); -- (i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;


// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    int64_t N;
    std::cin >> N;
    std::vector<int64_t> A(N+1);
    REP (i, N){
        cin >> A[i+1];
    }
    vector<int> id(N+1);
    int k = 1, v = 1;
    while (id[v] == 0){
        id[v] = k; k++;
        v = A[v];
    }
    vector<int64_t> ans;
    int len = k-id[v];
    REP(i, len){
        ans.push_back(v);
        v = A[v];
    }
    std::cout << ans.size() << '\n';
    for (auto v : ans) {
        std::cout << v << ' ';
    }
    std::cout << '\n';
    return 0;
}
